name: "terraform-plan"

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions: {}

env:
  PROJECT_ID: test-project-373118
  PROJECT_NUMBER: 593997455442
  WORKLOAD_IDENTITY_POOL: my-github-pool
  WORKLOAD_IDENTITY_POOL_PROVIDER: my-github-pool-provider
  TERRAFORM_VERSION: 1.9.2
  TFCMT_VERSION: 4.13.0

jobs:
  changes:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      pull-requests: read

    outputs:
      tfstates: ${{ steps.filter.outputs.changes }}

    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: main
          filters: |
            my:  "my/**"
            test:  "test/**"
            wip:  "wip/**"

  terraform-plan:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    permissions:
      id-token: write
      contents: write
      pull-requests: write

    needs: changes
    strategy:
      fail-fast: false
      matrix:
        tfstates: ${{ fromJSON(needs.changes.outputs.tfstates) }}
    defaults:
      run:
        working-directory: ${{ matrix.tfstates }}

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: projects/${{ env.PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOAD_IDENTITY_POOL }}/providers/${{ env.WORKLOAD_IDENTITY_POOL_PROVIDER }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      # fmt
      - name: fmt
        run: terraform fmt -recursive -check
        continue-on-error: true

      # init
      - name: init
        run: terraform init

      # validate
      - name: validate
        run: terraform validate -no-color

      - uses: shmokmt/actions-setup-tfcmt@v2
        with:
          version: v${{ env.TFCMT_VERSION }}

      # plan
      - name: terraform plan
        id: plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: tfcmt --config ${{ github.workspace }}/tfcmt.yml plan -patch -- terraform plan -no-color -input=false
